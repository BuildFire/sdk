{"version":3,"sources":["../sdk/scripts/buildfire/services/gamify/scoreboard.js"],"names":["buildfire","gamify","Scoreboard","tagName","size","autoSubscribeToPushNotification","this","pushGroupName","prototype","getScoreboard","callback","publicData","get","err","result","data","topScores","undefined","gamesPlayed","reset","save","_PNEnabled","notifications","pushNotification","subscribe","cb","groupName","console","error","unsubscribe","logScore","user","score","warn","t","ts","Date","logError","newRec","createdOn","bumpedOff","rankedAt","length","push","sort","a","b","pop","update","id","i","obj","email","schedule","title","text","displayName","users"],"mappings":"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","file":"scoreboard.min.js","sourcesContent":["/**\r\n * Created by danielhindi on 1/18/18.\r\n */\r\n\r\nif (typeof (buildfire) == \"undefined\") throw (\"please add buildfire.js first to use BuildFire services\");\r\nif (!buildfire.gamify) buildfire.gamify = {};\r\n\r\n\r\nbuildfire.gamify.Scoreboard = function(tagName,size,autoSubscribeToPushNotification){\r\n    this.size=size || 10;\r\n    this.autoSubscribeToPushNotification=autoSubscribeToPushNotification;\r\n    if(this.size < 1)this.size=10;\r\n    this.tagName = tagName || \"scoreboard\";\r\n    this.pushGroupName = \"scoreboard_\" + this.tagName;\r\n};\r\n\r\nbuildfire.gamify.Scoreboard.prototype = {\r\n    size:10\r\n    ,getScoreboard:function(callback){\r\n        buildfire.publicData.get(this.tagName, function (err, result) {\r\n\r\n            if(err)\r\n                callback(err);\r\n            else {\r\n                if (result.data.topScores)\r\n                    callback(undefined,result.data);\r\n                else\r\n                    callback(undefined,{\r\n                        gamesPlayed:0\r\n                        ,topScores: []\r\n                    });\r\n            }\r\n        });\r\n    }\r\n    ,reset:function(){\r\n        var data = {\r\n            gamesPlayed:0\r\n            ,topScores: []\r\n        };\r\n        buildfire.publicData.save(data,this.tagName, function(){});\r\n    }\r\n    , _PNEnabled:function(){\r\n        return buildfire.notifications && buildfire.notifications.pushNotification;\r\n    }\r\n    ,subscribe:function(cb){\r\n        /// if PushNotifications are available then subscribe to the group\r\n        if(this._PNEnabled()) {\r\n            buildfire.notifications.pushNotification.subscribe({groupName: this.pushGroupName}, function (err) {\r\n                if (err) console.error(err);\r\n                if(cb)cb(err);\r\n            });\r\n            return true;\r\n        }else\r\n            return false;\r\n    }\r\n    ,unsubscribe:function(cb){\r\n        /// if PushNotifications are available then unsubscribe from the group\r\n        if(this._PNEnabled()) {\r\n            buildfire.notifications.pushNotification.unsubscribe({groupName: this.pushGroupName}, function (err) {\r\n                if (err) console.error(err);\r\n                if(cb)cb(err);\r\n            });\r\n            return true;\r\n        }else\r\n            return false;\r\n    }\r\n    ,logScore: function (user, score,callback) {\r\n\r\n        if(this.autoSubscribeToPushNotification){\r\n            if(!this.subscribe()){\r\n                console.warn(\"Cannot subscribe to scoreboard push notifications because buildfire push notification services is not attached\");\r\n            }\r\n        }\r\n\r\n        var t= this;\r\n        var ts = new Date();\r\n        buildfire.publicData.get(this.tagName, function (err, result) {\r\n            function logError(err){\r\n                if(err){\r\n                    debugger;\r\n                    callback(err);\r\n                }\r\n            }\r\n\r\n            var newRec={user: user, score: score, createdOn:ts};\r\n\r\n            var data = {\r\n                gamesPlayed:0\r\n                ,topScores: [newRec]\r\n            };\r\n            if (err)\r\n                callback(err);\r\n            else if (result) {\r\n\r\n                if(!result.data.topScores){\r\n                    data.gamesPlayed++;\r\n                    buildfire.publicData.save(data, t.tagName,logError );\r\n                }\r\n                else{\r\n\r\n\r\n                    /// check if your score is greater than the lowest one\r\n                    if(result.data.topScores.length > t.size){\r\n                        if(result.data.topScores[t.size -1].score > score) /// nothing to do here you didnt make the list\r\n                            callback();\r\n                    }\r\n\r\n                    data = result.data;\r\n                    data.topScores.push(newRec);\r\n                    data.topScores= data.topScores.sort(function (a, b) {\r\n                        return b.score - a.score ;\r\n                    });\r\n\r\n                    var bumpedOff;\r\n                    if(data.topScores.length > t.size)\r\n                        bumpedOff = data.topScores.pop();\r\n\r\n                    data.gamesPlayed++;\r\n                    buildfire.publicData.update(result.id, data, t.tagName, logError);\r\n\r\n                    var rankedAt;\r\n                    for(var i = 0; i < data.topScores.length ;i++){\r\n                        if(data.topScores[i].createdOn == ts){\r\n                            rankedAt = i;\r\n                            break;\r\n                        }\r\n                    }\r\n                    var obj={bumpedOff:bumpedOff, rankedAt:rankedAt};\r\n\r\n                    if(t._PNEnabled()) {\r\n\r\n                        if( obj.bumpedOff && obj.bumpedOff.user.email != user.email){\r\n\r\n                            //send notification\r\n                            buildfire.notifications.pushNotification.schedule({\r\n                                title: \"You got kicked off !!!\"\r\n                                ,text: \"Your old score is no longer on the top 10. \" + user.displayName + \" has taken your spot. Honestly, I dont know how you sleep at night.\"\r\n                                //,at: new Date()\r\n                                ,users:[obj.bumpedOff.user.id]\r\n                            },logError);\r\n                        }\r\n\r\n                        if(rankedAt == 0) {\r\n                            buildfire.notifications.pushNotification.schedule({\r\n                                title: \"There is a new champion!\"\r\n                                ,text: user.displayName + \" has taken the lead at the new undisputed champion with a score of \" + score\r\n                                ,groupName: t.pushGroupName\r\n                            }, logError);\r\n                        }\r\n\r\n                        if(rankedAt == 1) {\r\n                            buildfire.notifications.pushNotification.schedule({\r\n                                title: \"There is a challenger to the champion\"\r\n                                , text: user.displayName + \" has taken 2nd place with a score of \" + score + \". Watch out \" + data.topScores[0].user.displayName\r\n                                , groupName: t.pushGroupName\r\n                            }, logError);\r\n                        }\r\n\r\n                        if(rankedAt == 2) {\r\n                            buildfire.notifications.pushNotification.schedule({\r\n                                title: \"There is a kid in town!\"\r\n                                , text: user.displayName + \" has taken 3rd place. Keep an eye on this one\"\r\n                                , groupName: t.pushGroupName\r\n                            }, logError);\r\n                        }\r\n\r\n                    }\r\n\r\n                    callback(null,obj);\r\n                }\r\n\r\n            }\r\n            else {\r\n                data.gamesPlayed++;\r\n                buildfire.publicData.save(data,t.tagName, logError);\r\n                callback(null,{rankedAt:0});\r\n            }\r\n\r\n        });\r\n    }\r\n};"]}