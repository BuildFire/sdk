const fixedOptions = {
  xxs: "32px",
  xs: "64px",
  s: "128px",
  m: "200px",
  l: "304px",
  xl: "416px",
  xxl: "600px",
  "720": "720px",
  "1080": "1080px",
  "1440": "1440px",
};

tinymce.PluginManager.add("imagelib", function (editor, url) {
  // Add a button that opens a window
  editor.addButton("imagelib", {
    text: "Image Library",
    icon: false,
    onclick: function () {
      const options = {
        showIcons: false,
        multiSelection: false,
      };

      function callback(err, results) {
        if (err) return console.error(err);
        const image = results.selectedFiles[0];

        if (!image || !image.length) return;

        editor.windowManager.open({
          title: "Crop / Resize",
          url: url + "/dialog.html",
          width: 300,
          height: 150,
          buttons: [
            {
              text: "Insert",
              onclick: function () {
                const modal = editor.windowManager.getWindows()[0];

                function getElementById(id) {
                  return modal.getContentWindow().document.getElementById(id);
                }

                const formValues = {
                  resize: getElementById("resize").checked,
                  crop: getElementById("crop").checked,
                  fixed: getElementById("fixed").checked,
                  responsive: getElementById("responsive").checked,
                  fixedOption: getElementById("fixedOption").value,
                  responsiveOption: getElementById("responsiveOption").value,
                  aspectOption: getElementById("aspectOption").value,
                };

                let resizedImage = "";

                let size = formValues.fixed
                  ? formValues.fixedOption
                  : formValues.responsiveOption;

                if (formValues.resize) {
                  resizedImage = buildfire.imageLib.resizeImage(image, {
                    size: size,
                    aspect: "1:1",
                  });
                } else {
                  resizedImage = buildfire.imageLib.cropImage(image, {
                    size: size,
                    aspect: formValues.aspectOption,
                  });
                }

                editor.insertContent(
                  `<img width="${
                    formValues.fixed ? fixedOptions[formValues.fixedOption] : ""
                  }" src="${resizedImage}"  />`
                );

                modal.close();
              },
            },
            { text: "Close", onclick: "close" },
          ],
        });
      }

      buildfire.imageLib.showDialog(options, callback);
    },
  });

  return {
    getMetadata: function () {
      return {
        name: "ImageLib plugin",
        url: "https://github.com/BuildFire/sdk/wiki/How-to-use-ImageLib",
      };
    },
  };
});
